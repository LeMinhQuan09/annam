{"version":3,"file":"wp-content/themes/hd/assets/css/plugins/swiper.css","mappings":"AA0FA;AAKA;AASA;AAMA;AAiOA;ACwiBA;AAaA;AD1yBA;AAKA;AASA;AAMA;AAiOA;ACwiBA;AAaA;ACp4BA;;;;;;;;;;EAAA;AAYA;AACA;EACE;EACA;EACA;EACA;ACcF;ADZA;AACA;EACE;EACA;;;GAAA;ACiBF;;ADZA;EACE;EACA;EACA;EACA;EACA;ACeF;;ADbA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACgBF;;ADdA;EACE;ACiBF;;ADfA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACkBF;;ADhBA;;;EAGE;ACmBF;;ADjBA;EACE;ACoBF;;ADlBA;EACE;ACqBF;;ADnBA;EACE;EACA;EACA;EACA;EACA;EACA;ACsBF;;ADpBA;EACE;ACuBF;;ADrBA;AACA;;EAEE;ACwBF;;ADtBA;EACE;EACA;ACyBF;;ADvBA;EACE;EACA;EACQ;AC0BV;;ADxBA;AACA;EACE;AC2BF;;ADzBA;EACE;AC4BF;;AD1BA;EACE;AC6BF;;AD3BA;;EAEE;AC8BF;;AD5BA;AACA;EACE;EACA;EACA;EACA;EACA;AC+BF;;AD7BA;EACE;ACgCF;;AD9BA;EACE;ACiCF;;AD/BA;EACE;UAAA;ACkCF;;ADhCA;EACE;UAAA;ACmCF;;ADjCA;EACE;UAAA;ACoCF;;ADlCA;EACE;ACqCF;;ADnCA;EACE;EACA;EACA;ACsCF;;ADpCA;EACE;EACA;ACuCF;;ADrCA;EACE;UAAA;ACwCF;;ADtCA;EACE;EACA;EACA;ACyCF;;ADvCA;EACE;UAAA;AC0CF;;ADxCA;EACE;EACA;EACA;AC2CF;;ADzCA;AACA;AACA;;;;;;;;;;EAUE;EACA;EACA;EACA;EACA;EACA;EACA;AC4CF;;AD1CA;EACE;AC6CF;;AD3CA;EACE;AC8CF;;AD5CA;EACE;AC+CF;;AD7CA;EACE;ACgDF;;AD9CA;EACE;ACiDF;;AD/CA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACkDF;;ADhDA;;EAEE;ACmDF;;ADjDA;EACE;ACoDF;;ADlDA;EACE;ACqDF;;ADnDA;EACE;IACE;ECsDF;EDpDA;IACE;ECsDF;AACF;ADpDA;AACA;EACE;EACA;ACsDF;;ADpDA;EACE;EACA;EACA;EACA;EACA;ACuDF;;ADrDA;EACE;EACA;ACwDF;;ADtDA;EACE;EACA;ACyDF;;ADvDA;EACE;EACA;;;;GAAA;AC8DF;;ADxDA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AC2DF;;ADzDA;;EAEE;EACA;EACA;AC4DF;;AD1DA;;EAEE;EACA;EACA;AC6DF;;AD3DA;;EAEE;AC8DF;;AD5DA;;EAEE;EACA;EACA;EACA;AC+DF;;AD7DA;;EAEE;ACgEF;;AD9DA;;EAEE;EACA;ACiEF;;AD/DA;;EAEE;EACA;ACkEF;;ADhEA;EACE;ACmEF;;ADjEA;AACA;;EAEE;EACA;EACA;EACA;EACA;EACA;ACoEF;;ADlEA;;EAEE;ACqEF;;ADnEA;;EAEE;EACA;ACsEF;;ADpEA;;EAEE;ACuEF;;ADrEA;AACA;EACE;;;;;;;;;;;;;;;;;;GAAA;AC0FF;;ADtEA;EACE;EACA;EACA;EACA;EACA;ACyEF;;ADvEA;EACE;AC0EF;;ADxEA;;EAEE;AC2EF;;ADzEA;AACA;;;;EAIE;EACA;EACA;EACA;AC4EF;;AD1EA;AACA;EACE;EACA;AC6EF;;AD3EA;EACE;EACA;AC8EF;;AD5EA;EACE;AC+EF;;AD7EA;EACE;ACgFF;;AD9EA;EACE;ACiFF;;AD/EA;EACE;ACkFF;;ADhFA;EACE;ACmFF;;ADjFA;EACE;ACoFF;;ADlFA;EACE;EACA;EACA;EACA;EACA;EACA;ACqFF;;ADnFA;EACE;EACA;EACA;EACA;EACA;EACQ;ACsFV;;ADpFA;EACE;ACuFF;;ADrFA;EACE;ACwFF;;ADtFA;EACE;EACA;ACyFF;;ADvFA;;EAEE;EACA;EACA;EACA;AC0FF;;ADxFA;;EAEE;EACA;AC2FF;;ADzFA;;EAEE;EACA;EACA;AC4FF;;AD1FA;;EAEE;EACA;AC6FF;;AD1FA;;EAEE;AC6FF;;AD3FA;;EAEE;EACA;EACA;AC8FF;;AD5FA;;EAEE;AC+FF;;AD5FA;EACE;AC+FF;;AD5FA;AACA;EACE;AC+FF;;AD7FA;AACA;EACE;EACA;ACgGF;;AD9FA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACiGF;;AD/FA;EACE;ACkGF;;ADhGA;;;;EAIE;EACA;EACA;EACA;ACmGF;;ADjGA;;;;EAIE;EACA;EACA;EACA;ACoGF;;ADlGA;EACE;ACqGF;;ADnGA;EACE;;;;;;;;;;GAAA;ACgHF;;ADpGA;EACE;EACA;EACA;EACA;ACuGF;;ADrGA;;EAEE;ACwGF;;ADtGA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;ACyGF;;ADvGA;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;AC0GF;;ADxGA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AC2GF;;ADzGA;EACE;AC4GF;;AD1GA;EACE;AC6GF;;AD3GA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;AC8GF;;AD5GA;;;EAGE;EACA;EACA;AC+GF;;AD7GA;AACA;EACE;EACA;ACgHF;;AD9GA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;ACiHF;;AD/GA;EACE;EACA;ACkHF;;ADhHA;EACE;ACmHF;;ADjHA;EACE;EACA;ACoHF;;ADlHA;EACE;ACqHF;;ADnHA;EACE;EACA;ACsHF;;ADpHA;EACE;ACuHF;;ADrHA;EACE;ACwHF;;ADtHA;EACE;ACyHF;;ADvHA;EACE;AC0HF;;ADxHA;EACE;EACA;EACQ;EACR;EACA;EACA;EACA;EACA;AC2HF;;ADzHA;EACE;AC4HF;;AD1HA;EACE;AC6HF;;AD3HA;;EAEE;AC8HF;;AD5HA;;;EAGE;EACA;AC+HF;;AD7HA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;ACgIF;;AD9HA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;ACiIF;;AD/HA;EACE;EACA;ACkIF;;ADhIA;AACA;;;;EAIE;EACA;EACQ;ACmIV;;ADjIA;AACA;EACE;ACoIF;;ADlIA;EACE;EACA;EACQ;EACR;ACqIF;;ADnIA;EACE;ACsIF;;ADpIA;;EAEE;ACuIF;;ADrIA;AACA;;;;EAIE;EACA;EACQ;ACwIV;;ADtIA;AACA;EACE;EACQ;EACR;EACA;ACyIF;;ADvIA;EACE;AC0IF;;ADxIA;EACE;EACA;EACQ;EACR;AC2IF;;AAh2BA;EACI;EACA;EACA;EACA;EACA;EACA;AAm2BJ;;AAh2BA;EACI;EACA;AAm2BJ;;AA/1BI;EACI;EACA;AAk2BR;;AA71BI;EACI;AAg2BR;AA91BQ;EACI;AAg2BZ;AA91BQ;EACI;EACA;EACA;EACA,WClCJ;EDmCI;EE8JR;EACA;EACA;EF9JQ;EACA;EACA;EACA;EACA;EACA;EACA;AAk2BZ;AA91BY;EACI;EACA,WClDR;EDmDQ,yBGlDH;EHmDG,qBGnDH;AHm5Bb;;AAt1BgB;EACI;AAy1BpB,C","sources":["webpack://hd/./wp-content/themes/hd/resources/sass/_functions.scss","webpack://hd/./wp-content/themes/hd/resources/sass/_mixins.scss","webpack://hd/./node_modules/swiper/swiper-bundle.css","webpack://hd/./wp-content/themes/hd/resources/sass/plugins/swiper.scss","webpack://hd/./wp-content/themes/hd/resources/sass/_colors.scss","webpack://hd/./wp-content/themes/hd/resources/sass/_flex_mixins.scss","webpack://hd/./wp-content/themes/hd/resources/sass/_variables.scss"],"sourcesContent":["@use \"sass:list\";\n@use \"sass:math\";\n\n// check a list has tokens or not.\n@function is_empty($list) {\n    @return list.length($list) == 0;\n}\n\n// Ascending\n// Used to evaluate Sass maps like our grid breakpoints.\n@mixin _assert-ascending($map, $map-name) {\n    $prev-key: null;\n    $prev-num: null;\n    @each $key, $num in $map {\n        @if $prev-num == null or unit($num) == \"%\" or unit($prev-num) == \"%\" {\n            // Do nothing\n        } @else if not comparable($prev-num, $num) {\n            @warn \"Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n        } @else if $prev-num >= $num {\n            @warn \"Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n        }\n        $prev-key: $key;\n        $prev-num: $num;\n    }\n}\n\n// Starts at zero\n// Used to ensure the min-width of the lowest breakpoint starts at 0.\n@mixin _assert-starts-at-zero($map, $map-name: \"$grid-breakpoints\") {\n    @if length($map) > 0 {\n        $values: map-values($map);\n        $first-value: nth($values, 1);\n        @if $first-value != 0 {\n            @warn \"First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.\";\n        }\n    }\n}\n\n// Replace `$search` with `$replace` in `$string`\n// Used on our SVG icon backgrounds for custom forms.\n//\n// @author Kitty Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n@function str-replace($string, $search, $replace: \"\") {\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n    }\n\n    @return $string;\n}\n\n// url-encode\n@function url-encode($string) {\n    $map: (\n            \"%\": \"%25\",\n            \"<\": \"%3C\",\n            \">\": \"%3E\",\n            \" \": \"%20\",\n            \"!\": \"%21\",\n            \"*\": \"%2A\",\n            \"'\": \"%27\",\n            '\"': \"%22\",\n            \"(\": \"%28\",\n            \")\": \"%29\",\n            \";\": \"%3B\",\n            \":\": \"%3A\",\n            \"@\": \"%40\",\n            \"&\": \"%26\",\n            \"=\": \"%3D\",\n            \"+\": \"%2B\",\n            \"$\": \"%24\",\n            \",\": \"%2C\",\n            \"/\": \"%2F\",\n            \"?\": \"%3F\",\n            \"#\": \"%23\",\n            \"[\": \"%5B\",\n            \"]\": \"%5D\"\n    );\n    $new: $string;\n    @each $search, $replace in $map {\n        $new: str-replace($new, $search, $replace);\n    }\n    @return $new;\n}\n\n/** $string - svg */\n@function inline-svg($string) {\n    @return url('data:image/svg+xml;utf8,#{url-encode($string)}');\n}\n\n/** https://github.com/pentzzsolt/sass-is-int/blob/master/_is-int.scss */\n@function is-int($value) {\n    @if type-of($value) != number {\n        //@warn '`#{$value}` is not a valid number!';\n        @return null;\n    }\n    @return round($value) == $value;\n}\n\n/** https://webdesign.tutsplus.com/tutorials/an-introduction-to-error-handling-in-sass--cms-19996 */\n@function throw($log: '') {\n    @warn $log;\n    @return false;\n}\n\n/** get breakpoint */\n@function get-breakpoint($breakpoint, $mq-breakpoints) {\n    @if map-has-key($mq-breakpoints, $breakpoint) {\n        @return map-get($mq-breakpoints, $breakpoint);\n    } @else {\n        //@warn 'given `#{$breakpoint}` is not available in `#{$mq-breakpoints}`';\n        //@return false;\n        @return throw($log: 'given `#{$breakpoint}` is not available in `#{$mq-breakpoints}`');\n    }\n}\n\n// Colors\n@function to-rgb($value) {\n    @return red($value), green($value), blue($value);\n}\n\n// A list of pre-calculated numbers of pow(divide((divide($value, 255) + .055), 1.055), 2.4). (from 0 to 255)\n// stylelint-disable-next-line scss/dollar-variable-default, scss/dollar-variable-pattern\n$_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003 .0033 .0037 .004 .0044 .0048 .0052 .0056 .006 .0065 .007 .0075 .008 .0086 .0091 .0097 .0103 .011 .0116 .0123 .013 .0137 .0144 .0152 .016 .0168 .0176 .0185 .0194 .0203 .0212 .0222 .0232 .0242 .0252 .0262 .0273 .0284 .0296 .0307 .0319 .0331 .0343 .0356 .0369 .0382 .0395 .0409 .0423 .0437 .0452 .0467 .0482 .0497 .0513 .0529 .0545 .0561 .0578 .0595 .0612 .063 .0648 .0666 .0685 .0704 .0723 .0742 .0762 .0782 .0802 .0823 .0844 .0865 .0887 .0908 .0931 .0953 .0976 .0999 .1022 .1046 .107 .1095 .1119 .1144 .117 .1195 .1221 .1248 .1274 .1301 .1329 .1356 .1384 .1413 .1441 .147 .15 .1529 .1559 .159 .162 .1651 .1683 .1714 .1746 .1779 .1812 .1845 .1878 .1912 .1946 .1981 .2016 .2051 .2086 .2122 .2159 .2195 .2232 .227 .2307 .2346 .2384 .2423 .2462 .2502 .2542 .2582 .2623 .2664 .2705 .2747 .2789 .2831 .2874 .2918 .2961 .3005 .305 .3095 .314 .3185 .3231 .3278 .3325 .3372 .3419 .3467 .3515 .3564 .3613 .3663 .3712 .3763 .3813 .3864 .3916 .3968 .402 .4072 .4125 .4179 .4233 .4287 .4342 .4397 .4452 .4508 .4564 .4621 .4678 .4735 .4793 .4851 .491 .4969 .5029 .5089 .5149 .521 .5271 .5333 .5395 .5457 .552 .5583 .5647 .5711 .5776 .5841 .5906 .5972 .6038 .6105 .6172 .624 .6308 .6376 .6445 .6514 .6584 .6654 .6724 .6795 .6867 .6939 .7011 .7084 .7157 .7231 .7305 .7379 .7454 .7529 .7605 .7682 .7758 .7835 .7913 .7991 .807 .8148 .8228 .8308 .8388 .8469 .855 .8632 .8714 .8796 .8879 .8963 .9047 .9131 .9216 .9301 .9387 .9473 .956 .9647 .9734 .9823 .9911 1;\n\n@function color-contrast($background, $color-contrast-dark: #000000, $color-contrast-light: #ffffff, $min-contrast-ratio: 4.5) {\n    $foregrounds: $color-contrast-light, $color-contrast-dark, #ffffff, #000000;\n    $max-ratio: 0;\n    $max-ratio-color: null;\n\n    @each $color in $foregrounds {\n        $contrast-ratio: contrast-ratio($background, $color);\n        @if $contrast-ratio > $min-contrast-ratio {\n            @return $color;\n        } @else if $contrast-ratio > $max-ratio {\n            $max-ratio: $contrast-ratio;\n            $max-ratio-color: $color;\n        }\n    }\n\n    @warn \"Found no color leading to #{$min-contrast-ratio}:1 contrast ratio against #{$background}...\";\n\n    @return $max-ratio-color;\n}\n\n@function contrast-ratio($background, $foreground: #ffffff) {\n    $l1: luminance($background);\n    $l2: luminance(opaque($background, $foreground));\n\n    @return if($l1 > $l2, divide($l1 + .05, $l2 + .05), divide($l2 + .05, $l1 + .05));\n}\n\n// Return WCAG2.1 relative luminance\n// See https://www.w3.org/TR/WCAG/#dfn-relative-luminance\n// See https://www.w3.org/TR/WCAG/#dfn-contrast-ratio\n@function luminance($color) {\n    $rgb: (\n            \"r\": red($color),\n            \"g\": green($color),\n            \"b\": blue($color)\n    );\n\n    @each $name, $value in $rgb {\n        $value: if(divide($value, 255) < .04045, divide(divide($value, 255), 12.92), nth($_luminance-list, $value + 1));\n        $rgb: map-merge($rgb, ($name: $value));\n    }\n\n    @return (map-get($rgb, \"r\") * .2126) + (map-get($rgb, \"g\") * .7152) + (map-get($rgb, \"b\") * .0722);\n}\n\n// Return opaque color\n// opaque(#fff, rgba(0, 0, 0, .5)) => #808080\n@function opaque($background, $foreground) {\n    @return mix(rgba($foreground, 1), $background, opacity($foreground) * 100%);\n}\n\n// Tint a color: mix a color with white\n@function tint-color($color, $weight) {\n    @return mix(white, $color, $weight);\n}\n\n// Shade a color: mix a color with black\n@function shade-color($color, $weight) {\n    @return mix(black, $color, $weight);\n}\n\n// Shade the color if the weight is positive, else tint it\n@function shift-color($color, $weight) {\n    @return if($weight > 0, shade-color($color, $weight), tint-color($color, -$weight));\n}\n\n/// Divide the given `$divident` by the given `$divisor`.\n///\n/// @param {Number} $divident - The divident.\n/// @param {Number} $divisor - The divisor.\n/// @param {Number} $precision - The precision decimals for the division.\n///\n/// @return {Number} The product of the division.\n@function divide($dividend, $divisor, $precision: 12) {\n    $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n    $dividend: math.abs($dividend);\n    $divisor: math.abs($divisor);\n    @if $dividend == 0 {\n        @return 0;\n    }\n    @if $divisor == 0 {\n        @error 'Cannot divide by 0';\n    }\n    $remainder: $dividend;\n    $result: 0;\n    $factor: 10;\n    @while ($remainder > 0 and $precision >= 0) {\n        $quotient: 0;\n        @while ($remainder >= $divisor) {\n            $remainder: $remainder - $divisor;\n            $quotient: $quotient + 1;\n        }\n        $result: $result * 10 + $quotient;\n        $factor: $factor * 0.1;\n        $remainder: $remainder * 10;\n        $precision: $precision - 1;\n        @if ($precision < 0 and $remainder >= $divisor * 5) {\n            $result: $result + 1;\n        }\n    }\n    $result: $result * $factor * $sign;\n    $dividend-unit: unit($dividend);\n    $divisor-unit: unit($divisor);\n    $unit-map: (\n            'px': 1px,\n            'rem': 1rem,\n            'em': 1em,\n            '%': 1%\n    );\n    @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n        $result: $result * map-get($unit-map, $dividend-unit);\n    }\n\n    @return $result;\n}\n\n/// Return valid calc\n@function add($value1, $value2, $return-calc: true) {\n    @if $value1 == null {\n        @return $value2;\n    }\n\n    @if $value2 == null {\n        @return $value1;\n    }\n\n    @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {\n        @return $value1 + $value2;\n    }\n\n    @return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + unquote(\" + \") + $value2);\n}\n\n/// The primary purpose of these functions is to avoid errors when a “unitless” 0 value is passed into a calc expression.\n// Expressions like calc(10px - 0) will return an error in all browsers, despite being mathematically correct.\n@function subtract($value1, $value2, $return-calc: true) {\n    @if $value1 == null and $value2 == null {\n        @return null;\n    }\n\n    @if $value1 == null {\n        @return -$value2;\n    }\n\n    @if $value2 == null {\n        @return $value1;\n    }\n\n    @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {\n        @return $value1 - $value2;\n    }\n\n    @if type-of($value2) != number {\n        $value2: unquote(\"(\") + $value2 + unquote(\")\");\n    }\n\n    @return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + unquote(\" - \") + $value2);\n}\n\n/// Removes the unit (e.g. px, em, rem) from a value, returning the number only.\n///\n/// @param {Number} $num - Number to strip unit from.\n///\n/// @returns {Number} The same number, sans unit.\n@function strip-unit($num) {\n    @return divide($num, $num * 0 + 1);\n}\n\n/// Converts one or more pixel values into matching rem values.\n///\n/// @param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.\n/// @param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$global-font-size` variable as the base.\n///\n/// @returns {List} A list of converted values.\n@function rem-calc($values, $base: null) {\n    $rem-values: ();\n    $count: length($values);\n\n    // If no base is defined, defer to the global font size\n    @if $base == null {\n        $base: 100%;\n    }\n\n    // If the base font size is a %, then multiply it by 16px\n    // This is because 100% font size = 16px in most all browsers\n    @if unit($base) == '%' {\n        $base: divide($base, 100%) * 16px;\n    }\n\n    // Using rem as base allows correct scaling\n    @if unit($base) == 'rem' {\n        $base: strip-unit($base) * 16px;\n    }\n\n    @if $count == 1 {\n        @return -zf-to-rem($values, $base);\n    }\n\n    @for $i from 1 through $count {\n        $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));\n    }\n\n    @return $rem-values;\n}\n\n/** size */\n@function fs($size: 16) {\n    @if false == $size {\n        @warn '`#{$size}` is not a valid size!';\n        @return null;\n    } @else if auto == $size or inherit == $size or initial == $size or unset == $size or unit($size) == '%' {\n        @return $size;\n    } @else {\n        @return rem-calc($size);\n    }\n}\n\n$unit-warnings: true !default;\n\n/// Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.\n/// @access private\n///\n/// @param {Number} $value - Pixel value to convert.\n/// @param {Number} $base [null] - Base for pixel conversion.\n///\n/// @returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.\n@function -zf-to-rem($value, $base: null) {\n    // Check if the value is a number\n    @if type-of($value) != 'number' {\n        @if $unit-warnings {\n            @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';\n        }\n        @return $value;\n    }\n\n    // Transform em into rem if someone hands over 'em's\n    @if unit($value) == 'em' {\n        $value: strip-unit($value) * 1rem;\n    }\n\n    // Calculate rem if units for $value is not rem or em\n    @if unit($value) != 'rem' {\n        $value: divide(strip-unit($value), strip-unit($base)) * 1rem;\n    }\n\n    // Turn 0rem into 0\n    @if $value == 0rem {\n        $value: 0;\n    }\n\n    @return $value;\n}\n","@use \"sass:list\";\n@use \"sass:math\";\n\n@import \"variables\";\n@import \"linear_gradient\";\n\n@mixin color-scheme($name) {\n    @media (prefers-color-scheme: #{$name}) {\n        @content;\n    }\n}\n\n@mixin mq-max-width($width: $md) {\n    @media only screen and (max-width: #{$width}) {\n        @content;\n    }\n}\n\n@mixin mq-min-width($width: $xl) {\n    @media only screen and (min-width: #{$width}) {\n        @content;\n    }\n}\n\n@mixin mq_breakpoint( $breakpoint, $type: min ) {\n    $breakpoint-value: fs($breakpoint);\n    @if $type == max {\n        $breakpoint-value: #{$breakpoint-value - fs(0.02)};\n    }\n\n    @media only screen and (#{$type}-width: $breakpoint-value) {\n        @content;\n    }\n}\n\n@mixin mq( $breakpoint, $type: min ) {\n    $breakpoint-value: get-breakpoint($breakpoint, $mq-breakpoints);\n    @if $breakpoint-value {\n        @if $type == max {\n            $breakpoint-value: #{$breakpoint-value - fs(0.02)};\n        }\n        @media only screen and (#{$type}-width: $breakpoint-value) {\n            @content;\n        }\n    } @else {\n        @warn 'Invalid breakpoint: `#{$breakpoint}`.';\n    }\n}\n\n@mixin mq-min($breakpoint: sm) {\n    @include mq($breakpoint, min) {\n        @content;\n    }\n}\n\n@mixin mq-max($breakpoint: sm) {\n    @include mq($breakpoint, max) {\n        @content;\n    }\n}\n\n@mixin media-css(\n    $css_property: font-size,\n    $m: $body-size,\n    $t: false,\n    $d: false\n) {\n    @if type-of($m) != bool {\n        #{$css_property}: fs($m);\n    }\n    @if type-of($t) != bool {\n        @include mq-min(tablet) {\n            #{$css_property}: fs($t);\n        }\n    }\n    @if type-of($d) != bool {\n        @include mq-min(desktop) {\n            #{$css_property}: fs($d);\n        }\n    }\n}\n\n@mixin box($width: 300, $height: $width, $border_radius: false) {\n    width: fs($width);\n    height: fs($height);\n\n    @if type-of($border_radius) != bool {\n        border-radius: fs($border_radius);\n    }\n}\n\n@mixin media-box($m: false, $t: false, $d: false, $border_radius: false) {\n    @if type-of($m) != bool {\n        @include box($m);\n    }\n    @if type-of($t) != bool {\n        @include mq-min(tablet) {\n            @include box($t);\n        }\n    }\n    @if type-of($d) != bool {\n        @include mq-min(desktop) {\n            @include box($d);\n        }\n    }\n\n    @if type-of($border_radius) != bool {\n        border-radius: fs($border_radius);\n    }\n}\n\n@mixin media-fs($m: $body-size, $t: false, $d: false) {\n    @include media-css(font-size, $m, $t, $d);\n}\n\n@mixin media-padding($m: 20, $t: false, $d: false) {\n    @include media-css(padding, $m, $t, $d);\n}\n\n@mixin media-pt($m: 20, $t: false, $d: false) {\n    @include media-css(padding-top, $m, $t, $d);\n}\n\n@mixin media-pb($m: 20, $t: false, $d: false) {\n    @include media-css(padding-bottom, $m, $t, $d);\n}\n\n@mixin media-pl($m: 20, $t: false, $d: false) {\n    @include media-css(padding-left, $m, $t, $d);\n}\n\n@mixin media-pr($m: 20, $t: false, $d: false) {\n    @include media-css(padding-right, $m, $t, $d);\n}\n\n@mixin media-margin($m: 20, $t: false, $d: false) {\n    @include media-css(margin, $m, $t, $d);\n}\n\n@mixin media-mt($m: 20, $t: false, $d: false) {\n    @include media-css(margin-top, $m, $t, $d);\n}\n\n@mixin media-mb($m: 20, $t: false, $d: false) {\n    @include media-css(margin-bottom, $m, $t, $d);\n}\n\n@mixin media-ml($m: 20, $t: false, $d: false) {\n    @include media-css(margin-left, $m, $t, $d);\n}\n\n@mixin media-mr($m: 20, $t: false, $d: false) {\n    @include media-css(margin-right, $m, $t, $d);\n}\n\n@mixin gap($row: 20, $col: $row) {\n    @if $row == $col and type-of($row) != bool {\n        grid-gap: fs($row);\n        gap: fs($row);\n    } @else if $row != $col and type-of($row) != bool and type-of($col) != bool {\n        grid-gap: fs($row) fs($col);\n        gap: fs($row) fs($col);\n    }\n}\n\n@mixin media-gap($m: 20, $t: false, $d: false) {\n    @include gap($m);\n    @if type-of($t) != bool {\n        @include mq-min(tablet) {\n            @include gap($t);\n        }\n    }\n    @if type-of($d) != bool {\n        @include mq-min(desktop) {\n            @include gap($d);\n        }\n    }\n}\n\n@mixin fs-heading($heading: h1) {\n    font-size: fs(map-get($font-sizes, $heading));\n    @include mq-min(tablet) {\n        font-size: fs(map-get($font-sizes-large, $heading));\n    }\n}\n\n@mixin placeholder-color($color: #9a9a9a) {\n    &::placeholder {\n        color: $color;\n    }\n}\n\n@mixin webkit-scrollbar($width: $scrollbar-w, $height: $scrollbar-h) {\n    &::-webkit-scrollbar {\n        @include box($width, $height);\n    }\n}\n\n@mixin webkit-scrollbar-track($color: #e6e6e6) {\n    &::-webkit-scrollbar-track {\n        background-color: $color;\n    }\n}\n\n@mixin webkit-scrollbar-thumb($color: #9a9a9a) {\n    &::-webkit-scrollbar-thumb {\n        background-color: $color;\n    }\n}\n\n@mixin responsive-wrapper($width: 100%) {\n    position: relative;\n    display: block;\n    overflow: hidden;\n    transition: all 0.3s ease-in-out;\n\n    @if type-of($width) != bool {\n        width: fs($width);\n    }\n\n    & > img:first-child {\n        display: block;\n        @include absolute-center;\n    }\n\n    &:not(.auto) {\n        & > img:first-child {\n            height: 100% !important;\n            width: 100%;\n            max-width: unset;\n            object-fit: cover;\n            object-position: center;\n        }\n    }\n}\n\n@mixin responsive-image-auto {\n    height: auto !important;\n    width: auto !important;\n    object-fit: contain;\n    object-position: center;\n    max-width: 100%;\n    max-height: 100%;\n}\n\n@mixin responsive-scale( $scale: 1.06, $opacity: 1 ) {\n    transform: scale(1.0001);\n    will-change: transform;\n    transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.3s;\n\n    &:hover {\n        transform: scale($scale);\n        opacity: $opacity;\n    }\n}\n\n@mixin responsive-bg-ratio( $ratio-width: 4, $ratio-height: 3 ) {\n    background-size: cover;\n    background-position: center;\n    display: block;\n\n    @supports (aspect-ratio: 1) {\n        aspect-ratio: list.slash($ratio-width, $ratio-height);\n    }\n\n    @supports not (aspect-ratio: 1) {\n        height: 0;\n        padding-bottom: percentage(divide($ratio-height, $ratio-width));\n    }\n}\n\n@mixin responsive-ratio(\n    $ratio-width: 3,\n    $ratio-height: 2,\n    $pseudo: false,\n    $width_percent: 100%\n) {\n    $padding: divide($width_percent * $ratio-height, $ratio-width);\n    @if $pseudo {\n        &::before {\n            content: '';\n            position: relative;\n            width: fs($width_percent);\n            padding-bottom: fs($padding);\n        }\n    } @else {\n        @supports (aspect-ratio: 1) {\n            aspect-ratio: auto list.slash($ratio-width, $ratio-height);\n        }\n\n        @supports not (aspect-ratio: 1) {\n            height: 0;\n            padding-bottom: fs($padding);\n        }\n    }\n}\n\n@mixin linear-gradient( $angle: 90deg, $c: $primary, $amount: 12deg ) {\n    background: linear-gradient($angle, $c 0%, adjust-hue($c, $amount) 100%);\n}\n\n@mixin gradient-text( $angle: 135deg, $c: $primary, $amount: 12deg ) {\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    color: transparent;\n    display: inline-block;\n    @include linear-gradient($angle, $c, $amount);\n}\n\n@mixin gradient-text2( $angle: 135deg, $c1: $primary, $c2: $secondary ) {\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    color: transparent;\n    display: inline-block;\n    @include linear-gradient($angle, $c1, $c1);\n}\n\n@mixin left-container( $padding_m: $gutter-xs, $padding: $gutter, $\\2xl: false, $\\3xl: false ) {\n    margin-left: 0;\n    margin-right: auto;\n\n    @if is-int($padding_m) or unit($padding_m) == '%' {\n        padding-right: fs($padding_m);\n    }\n\n    // tablet breakpoint\n    @if is-int($padding) or unit($padding) == '%' {\n        @include mq-min(tablet) {\n            padding-right: fs($padding);\n        }\n    }\n\n    // sm breakpoint\n    @include mq-min(sm) {\n        max-width: add(50%, calc(map-get($container-max-widths, sm) / 2));\n    }\n\n    // md breakpoint\n    @include mq-min(md) {\n        max-width: add(50%, calc(map-get($container-max-widths, md) / 2));\n    }\n\n    // lg breakpoint\n    @include mq-min(lg) {\n        max-width: add(50%, calc(map-get($container-max-widths, lg) / 2));\n    }\n\n    // xl breakpoint\n    @include mq-min(xl) {\n        max-width: add(50%, calc(map-get($container-max-widths, xl) / 2));\n    }\n\n    // 2xl breakpoint\n    @if true == $\\2xl {\n        @include mq-min(2xl) {\n            max-width: add(50%, calc(map-get($container-max-widths, 2xl) / 2));\n        }\n    }\n\n    // 3xl breakpoint\n    @if true == $\\3xl {\n        @include mq-min(3xl) {\n            max-width: add(50%, calc(map-get($container-max-widths, 3xl) / 2));\n        }\n    }\n}\n\n@mixin right-container( $padding_m: $gutter-xs, $padding: $gutter, $\\2xl: false, $\\3xl: false ) {\n    margin-right: 0;\n    margin-left: auto;\n\n    @if is-int($padding_m) or unit($padding_m) == '%' {\n        padding-left: fs($padding_m);\n    }\n\n    // tablet breakpoint\n    @if is-int($padding) or unit($padding) == '%' {\n        @include mq-min(tablet) {\n            padding-left: fs($padding);\n        }\n    }\n\n    // sm breakpoint\n    @include mq-min(sm) {\n        max-width: add(50%, calc(map-get($container-max-widths, sm) / 2));\n    }\n\n    // md breakpoint\n    @include mq-min(md) {\n        max-width: add(50%, calc(map-get($container-max-widths, md) / 2));\n    }\n\n    // lg breakpoint\n    @include mq-min(lg) {\n        max-width: add(50%, calc(map-get($container-max-widths, lg) / 2));\n    }\n\n    // xl breakpoint\n    @include mq-min(xl) {\n        max-width: add(50%, calc(map-get($container-max-widths, xl) / 2));\n    }\n\n    // 2xl breakpoint\n    @if true == $\\2xl {\n        @include mq-min(2xl) {\n            max-width: add(50%, calc(map-get($container-max-widths, 2xl) / 2));\n        }\n    }\n\n    // 3xl breakpoint\n    @if true == $\\3xl {\n        @include mq-min(3xl) {\n            max-width: add(50%, calc(map-get($container-max-widths, 3xl) / 2));\n        }\n    }\n}\n\n// alias of 'layout-container'\n@mixin container( $padding_m: $gutter-xs, $padding: $gutter, $\\2xl: false, $\\3xl: false ) {\n    @include layout-container($padding_m, $padding, $\\2xl, $\\3xl)\n}\n\n@mixin layout-container( $padding_m: $gutter-xs, $padding: $gutter, $\\2xl: false, $\\3xl: false ) {\n    margin-left: auto;\n    margin-right: auto;\n\n    &:not(.full) {\n\n        @if is-int($padding_m) or unit($padding_m) == '%' {\n            padding-left: fs($padding_m);\n            padding-right: fs($padding_m);\n        }\n\n        // tablet breakpoint\n        @if is-int($padding) or unit($padding) == '%' {\n            @include mq-min(tablet) {\n                padding-left: fs($padding);\n                padding-right: fs($padding);\n            }\n        }\n\n        // sm breakpoint\n        @include mq-min(sm) {\n            max-width: map-get($container-max-widths, sm);\n        }\n\n        // md breakpoint\n        @include mq-min(md) {\n            max-width: map-get($container-max-widths, md);\n        }\n\n        // lg breakpoint\n        @include mq-min(lg) {\n            max-width: map-get($container-max-widths, lg);\n        }\n\n        // xl breakpoint\n        @include mq-min(xl) {\n            max-width: map-get($container-max-widths, xl);\n        }\n\n        // 2xl breakpoint\n        @if true == $\\2xl {\n            @include mq-min(2xl) {\n                max-width: map-get($container-max-widths, 2xl);\n            }\n        }\n\n        // 3xl breakpoint\n        @if true == $\\3xl {\n            @include mq-min(3xl) {\n                max-width: map-get($container-max-widths, 3xl);\n            }\n        }\n    }\n}\n\n@mixin mx-gutter( $m: $gutter-xs, $t: $gutter ) {\n    @if is-int($m) or unit($m) == '%' {\n        margin-left: -#{fs($m)};\n        margin-right: -#{fs($m)};\n    }\n\n    @if is-int($t) or unit($t) == '%' {\n        @include mq-min(tablet) {\n            @if 0 == $t {\n                margin-left: 0;\n                margin-right: 0;\n            } @else {\n                margin-left: -#{fs($t)};\n                margin-right: -#{fs($t)};\n            }\n        }\n    }\n}\n\n@mixin my-gutter( $m: $gutter-xs, $t: $gutter ) {\n    @if is-int($m) or unit($m) == '%' {\n        margin-top: -#{fs($m)};\n        margin-bottom: -#{fs($m)};\n    }\n\n    @if is-int($t) or unit($t) == '%' {\n        @include mq-min(tablet) {\n            @if 0 == $t {\n                margin-top: 0;\n                margin-bottom: 0;\n            } @else {\n                margin-top: -#{fs($t)};\n                margin-bottom: -#{fs($t)};\n            }\n        }\n    }\n}\n\n@mixin px-gutter( $m: $gutter-xs, $t: $gutter ) {\n    @if is-int($m) or unit($m) == '%' {\n        padding-left: fs($m);\n        padding-right: fs($m);\n    }\n\n    @if is-int($t) or unit($t) == '%' {\n        @include mq-min(tablet) {\n            padding-left: fs($t);\n            padding-right: fs($t);\n        }\n    }\n}\n\n@mixin py-gutter( $m: $gutter-xs, $t: $gutter ) {\n    @if is-int($m) or unit($m) == '%' {\n        padding-top: fs($m);\n        padding-bottom: fs($m);\n    }\n\n    @if is-int($t) or unit($t) == '%' {\n        @include mq-min(tablet) {\n            padding-top: fs($t);\n            padding-bottom: fs($t);\n        }\n    }\n}\n\n@mixin line-clamp(\n    $n: 2,\n    $value_fallback: ( false, false, false ),\n    $attr_fallback: max-height\n) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: initial;\n\n    @supports (-webkit-line-clamp: $n) {\n        -webkit-line-clamp: $n;\n        -webkit-box-orient: vertical;\n        display: -webkit-box;\n    }\n\n    @supports not (-webkit-line-clamp: $n) {\n        $m: nth($value_fallback, 1);\n        $t: nth($value_fallback, 2);\n        $d: nth($value_fallback, 3);\n        @include media-css($attr_fallback, $m, $t, $d);\n    }\n}\n\n@mixin hover-bgcolor( $c1: false, $c2: $c1 ) {\n    @if type-of($c1) != bool {\n        background-color: $c1;\n    }\n\n    &:hover {\n        @if type-of($c2) != bool {\n            background-color: $c2;\n        }\n    }\n}\n\n@mixin hover-color( $c1: false, $c2: $c1, $text-decoration: false ) {\n    @if type-of($c1) != bool {\n        color: $c1;\n    }\n\n    &:hover {\n        @if type-of($c2) != bool {\n            color: $c2;\n        }\n        @if false == $text-decoration {\n            text-decoration: none;\n        }\n    }\n}\n\n@mixin hover-svg( $c1: false, $c2: $c1 ) {\n    @if type-of($c1) != bool {\n        fill: $c1;\n    }\n\n    &:hover {\n        @if type-of($c2) != bool {\n            fill: $c2;\n        }\n    }\n}\n\n@mixin underline(\n    $color: $primary,\n    $height: 1px,\n    $width: 100%,\n    $left: 0,\n    $bottom: 0\n) {\n    position: relative;\n    display: inline-block;\n\n    &::before {\n        content: \"\";\n        display: inline-block;\n        @include box($width, $height);\n        position: absolute;\n        bottom: fs($bottom);\n        left: fs($left);\n        background-color: $color;\n        transform-origin: right center;\n        transform: scaleX(0);\n        transition: transform 0.2s cubic-bezier(1, 0, 0, 1);\n    }\n\n    &:hover {\n        &::before {\n            transform-origin: left center;\n            transform: scaleX(1);\n        }\n    }\n}\n\n@mixin list-reset( $margin: false, $padding: false ) {\n    @if is-int($margin) {\n        margin: fs($margin);\n    }\n    @if is-int($padding) {\n        padding: fs($padding);\n    }\n    list-style: none;\n}\n\n@mixin hidden-text {\n    border: 0;\n    clip: rect(0, 0, 0, 0);\n    clip-path: inset(50%);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n    word-wrap: normal !important;\n    white-space: nowrap;\n}\n\n@mixin centering-self( $width: 300, $height: $width ) {\n    @include box($width, $height);\n    position: absolute;\n    top: subtract(50%, fs(divide($height, 2)));\n    left: subtract(50%, fs(divide($width, 2)));\n}\n\n@mixin fixed-center {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass\n@mixin vertical-center {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass\n@mixin horizontal-center {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n}\n\n// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass\n@mixin absolute-center {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n@mixin absolute-full {\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n}\n\n@mixin fixed-full {\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    position: fixed;\n}\n\n// @link https://engageinteractive.co.uk/blog/top-10-scss-mixins\n@mixin pseudo( $content: '', $display: block, $pos: absolute ) {\n    content: $content;\n    display: $display;\n    position: $pos;\n}\n\n// @link https://www.developerdrive.com/10-best-sass-mixins-for-web-developers/\n@mixin arrow( $direction: down, $size: 5px, $color: #000 ) {\n    width: 0;\n    height: 0;\n\n    @if ($direction == left) {\n        border-top: $size solid transparent;\n        border-bottom: $size solid transparent;\n        border-right: $size solid $color;\n    } @else if ($direction == right) {\n        border-top: $size solid transparent;\n        border-bottom: $size solid transparent;\n        border-left: $size solid $color;\n    } @else if ($direction == down) {\n        border-left: $size solid transparent;\n        border-right: $size solid transparent;\n        border-top: $size solid $color;\n    } @else {\n        border-left: $size solid transparent;\n        border-right: $size solid transparent;\n        border-bottom: $size solid $color;\n    }\n}\n\n// @link https://www.barrage.net/blog/technology/top-8-sass-mixins\n// Ex: @include fluid-font-size(320px, 1024px, 22px, 55px);\n@mixin fluid-font-size(\n    $min-width,\n    $max-width,\n    $min-font-size,\n    $max-font-size\n) {\n    $unit1: unit($min-width);\n    $unit2: unit($max-width);\n    $unit3: unit($min-font-size);\n    $unit4: unit($max-font-size);\n\n    @if $unit1 == $unit2 and $unit1 == $unit3 and $unit1 == $unit4 {\n        & {\n            font-size: $min-font-size;\n            line-height: $min-font-size * 1.618;\n\n            @media screen and (min-width: $min-width) {\n                font-size: calc(\n                        #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *\n                        ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})\n                );\n                line-height: calc(\n                        #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *\n                        1.618 *\n                        ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})\n                );\n            }\n\n            @media screen and (min-width: $max-width) {\n                font-size: $max-font-size;\n                line-height: $max-font-size * 1.618;\n            }\n        }\n    }\n}\n\n// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix Hack\n// @link http://danisadesigner.com/blog/flexbox-clear-fix-pseudo-elements/ Flexbox fix\n@mixin clearfix {\n    &::before, &::after {\n        display: table;\n        content: '';\n\n        $global-flexbox: true;\n        @if $global-flexbox {\n            flex-basis: 0;\n            order: 1;\n        }\n    }\n\n    &::after {\n        clear: both;\n    }\n}\n\n// @param {Color} $color [$black] - Color to use for the icon.\n// @param {Color} $color-hover [$dark-gray] - Color to use when the icon is hovered over.\n// @param {Number} $width [20px] - Width of the icon.\n// @param {Number} $height [16px] - Height of the icon.\n// @param {Number} $weight [2px] - Height of individual bars in the icon.\n// @param {Number} $bars [3] - Number of bars in the icon.\n@mixin hamburger(\n    $color: $body-color,\n    $color-hover: $gray-900,\n    $width: 20px,\n    $height: 16px,\n    $weight: 2px,\n    $bars: 3\n) {\n    // box-shadow CSS output\n    $shadow: ();\n    $hover-shadow: ();\n\n    // Spacing between bars is calculated based on the total height of the icon and the weight of each bar\n    $spacing: divide($height - ($weight * $bars), $bars - 1);\n\n    @if unit($spacing) == 'px' {\n        $spacing: floor($spacing);\n    }\n\n    @for $i from 2 through $bars {\n        $offset: ($weight + $spacing) * ($i - 1);\n        $shadow: append($shadow, 0 $offset 0 $color, comma);\n    }\n\n    // Icon container\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    @include box($width, $height);\n    cursor: pointer;\n\n    // Icon bars\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        @include box(100%, $weight);\n        background: $color;\n        box-shadow: $shadow;\n    }\n\n    // Hover state\n    @if $color-hover {\n        // Generate CSS\n        @for $i from 2 through $bars {\n            $offset: ($weight + $spacing) * ($i - 1);\n            $hover-shadow: append($hover-shadow, 0 $offset 0 $color-hover, comma);\n        }\n\n        &:hover::after {\n            background: $color-hover;\n            box-shadow: $hover-shadow;\n        }\n    }\n}\n\n@mixin animation-loading( $size: 30, $c1: $body-color, $c2: #f3f3f3 ) {\n    position: relative;\n\n    &::before {\n        @include absolute-full;\n        z-index: 9998;\n        content: '';\n        background-color: rgb(0 0 0 / 30%);\n    }\n\n    &::after {\n        content: '';\n        @include centering-self($size);\n        z-index: 9999;\n        border: 3px solid;\n        border-color: $c1 $c2 $c1 $c2; // top right bottom left\n        border-radius: 50%;\n        animation: spin 2s linear infinite;\n    }\n}\n\n/** keyframe */\n@mixin keyframes( $name ) {\n    @-webkit-keyframes #{$name} {\n        @content;\n    }\n    @-moz-keyframes #{$name} {\n        @content;\n    }\n    @keyframes #{$name} {\n        @content;\n    }\n}\n\n/** add unique id image url */\n$unique-id: unique_id();\n@function inline-image($url) {\n    @return url(\"#{$url}?v=#{$unique-id}\");\n}","/**\n * Swiper 11.1.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2024 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 30, 2024\n */\n\n/* FONT_START */\n@font-face {\n  font-family: 'swiper-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA');\n  font-weight: 400;\n  font-style: normal;\n}\n/* FONT_END */\n:root {\n  --swiper-theme-color: #007aff;\n  /*\n  --swiper-preloader-color: var(--swiper-theme-color);\n  --swiper-wrapper-transition-timing-function: initial;\n  */\n}\n:host {\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 1;\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n  display: block;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-ios .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-horizontal {\n  touch-action: pan-y;\n}\n.swiper-vertical {\n  touch-action: pan-x;\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n  display: block;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight,\n.swiper-autoheight .swiper-slide {\n  height: auto;\n}\n.swiper-autoheight .swiper-wrapper {\n  align-items: flex-start;\n  transition-property: transform, height;\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d.swiper-css-mode .swiper-wrapper {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-wrapper {\n  transform-style: preserve-3d;\n}\n.swiper-3d {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-slide,\n.swiper-3d .swiper-cube-shadow {\n  transform-style: preserve-3d;\n}\n/* CSS Mode */\n.swiper-css-mode > .swiper-wrapper {\n  overflow: auto;\n  scrollbar-width: none;\n  /* For Firefox */\n  -ms-overflow-style: none;\n  /* For Internet Explorer and Edge */\n}\n.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {\n  display: none;\n}\n.swiper-css-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: start start;\n}\n.swiper-css-mode.swiper-horizontal > .swiper-wrapper {\n  scroll-snap-type: x mandatory;\n}\n.swiper-css-mode.swiper-vertical > .swiper-wrapper {\n  scroll-snap-type: y mandatory;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper {\n  scroll-snap-type: none;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: none;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper::before {\n  content: '';\n  flex-shrink: 0;\n  order: 9999;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: center center;\n  scroll-snap-stop: always;\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {\n  margin-inline-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {\n  height: 100%;\n  min-height: 1px;\n  width: var(--swiper-centered-offset-after);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {\n  margin-block-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {\n  width: 100%;\n  min-width: 1px;\n  height: var(--swiper-centered-offset-after);\n}\n/* Slide styles start */\n/* 3D Shadows */\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom,\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: rgba(0, 0, 0, 0.15);\n}\n.swiper-3d .swiper-slide-shadow-left {\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-right {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-top {\n  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-bottom {\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-lazy-preloader {\n  width: 42px;\n  height: 42px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -21px;\n  margin-top: -21px;\n  z-index: 10;\n  transform-origin: 50%;\n  box-sizing: border-box;\n  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));\n  border-radius: 50%;\n  border-top-color: transparent;\n}\n.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,\n.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {\n  animation: swiper-preloader-spin 1s infinite linear;\n}\n.swiper-lazy-preloader-white {\n  --swiper-preloader-color: #fff;\n}\n.swiper-lazy-preloader-black {\n  --swiper-preloader-color: #000;\n}\n@keyframes swiper-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n/* Slide styles end */\n.swiper-virtual .swiper-slide {\n  -webkit-backface-visibility: hidden;\n  transform: translateZ(0);\n}\n.swiper-virtual.swiper-css-mode .swiper-wrapper::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  pointer-events: none;\n}\n.swiper-virtual.swiper-css-mode.swiper-horizontal .swiper-wrapper::after {\n  height: 1px;\n  width: var(--swiper-virtual-size);\n}\n.swiper-virtual.swiper-css-mode.swiper-vertical .swiper-wrapper::after {\n  width: 1px;\n  height: var(--swiper-virtual-size);\n}\n:root {\n  --swiper-navigation-size: 44px;\n  /*\n  --swiper-navigation-top-offset: 50%;\n  --swiper-navigation-sides-offset: 10px;\n  --swiper-navigation-color: var(--swiper-theme-color);\n  */\n}\n.swiper-button-prev,\n.swiper-button-next {\n  position: absolute;\n  top: var(--swiper-navigation-top-offset, 50%);\n  width: calc(var(--swiper-navigation-size) / 44 * 27);\n  height: var(--swiper-navigation-size);\n  margin-top: calc(0px - (var(--swiper-navigation-size) / 2));\n  z-index: 10;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--swiper-navigation-color, var(--swiper-theme-color));\n}\n.swiper-button-prev.swiper-button-disabled,\n.swiper-button-next.swiper-button-disabled {\n  opacity: 0.35;\n  cursor: auto;\n  pointer-events: none;\n}\n.swiper-button-prev.swiper-button-hidden,\n.swiper-button-next.swiper-button-hidden {\n  opacity: 0;\n  cursor: auto;\n  pointer-events: none;\n}\n.swiper-navigation-disabled .swiper-button-prev,\n.swiper-navigation-disabled .swiper-button-next {\n  display: none !important;\n}\n.swiper-button-prev svg,\n.swiper-button-next svg {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  transform-origin: center;\n}\n.swiper-rtl .swiper-button-prev svg,\n.swiper-rtl .swiper-button-next svg {\n  transform: rotate(180deg);\n}\n.swiper-button-prev,\n.swiper-rtl .swiper-button-next {\n  left: var(--swiper-navigation-sides-offset, 10px);\n  right: auto;\n}\n.swiper-button-next,\n.swiper-rtl .swiper-button-prev {\n  right: var(--swiper-navigation-sides-offset, 10px);\n  left: auto;\n}\n.swiper-button-lock {\n  display: none;\n}\n/* Navigation font start */\n.swiper-button-prev:after,\n.swiper-button-next:after {\n  font-family: swiper-icons;\n  font-size: var(--swiper-navigation-size);\n  text-transform: none !important;\n  letter-spacing: 0;\n  font-variant: initial;\n  line-height: 1;\n}\n.swiper-button-prev:after,\n.swiper-rtl .swiper-button-next:after {\n  content: 'prev';\n}\n.swiper-button-next,\n.swiper-rtl .swiper-button-prev {\n  right: var(--swiper-navigation-sides-offset, 10px);\n  left: auto;\n}\n.swiper-button-next:after,\n.swiper-rtl .swiper-button-prev:after {\n  content: 'next';\n}\n/* Navigation font end */\n:root {\n  /*\n  --swiper-pagination-color: var(--swiper-theme-color);\n  --swiper-pagination-left: auto;\n  --swiper-pagination-right: 8px;\n  --swiper-pagination-bottom: 8px;\n  --swiper-pagination-top: auto;\n  --swiper-pagination-fraction-color: inherit;\n  --swiper-pagination-progressbar-bg-color: rgba(0,0,0,0.25);\n  --swiper-pagination-progressbar-size: 4px;\n  --swiper-pagination-bullet-size: 8px;\n  --swiper-pagination-bullet-width: 8px;\n  --swiper-pagination-bullet-height: 8px;\n  --swiper-pagination-bullet-border-radius: 50%;\n  --swiper-pagination-bullet-inactive-color: #000;\n  --swiper-pagination-bullet-inactive-opacity: 0.2;\n  --swiper-pagination-bullet-opacity: 1;\n  --swiper-pagination-bullet-horizontal-gap: 4px;\n  --swiper-pagination-bullet-vertical-gap: 6px;\n  */\n}\n.swiper-pagination {\n  position: absolute;\n  text-align: center;\n  transition: 300ms opacity;\n  transform: translate3d(0, 0, 0);\n  z-index: 10;\n}\n.swiper-pagination.swiper-pagination-hidden {\n  opacity: 0;\n}\n.swiper-pagination-disabled > .swiper-pagination,\n.swiper-pagination.swiper-pagination-disabled {\n  display: none !important;\n}\n/* Common Styles */\n.swiper-pagination-fraction,\n.swiper-pagination-custom,\n.swiper-horizontal > .swiper-pagination-bullets,\n.swiper-pagination-bullets.swiper-pagination-horizontal {\n  bottom: var(--swiper-pagination-bottom, 8px);\n  top: var(--swiper-pagination-top, auto);\n  left: 0;\n  width: 100%;\n}\n/* Bullets */\n.swiper-pagination-bullets-dynamic {\n  overflow: hidden;\n  font-size: 0;\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {\n  transform: scale(0.33);\n  position: relative;\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active {\n  transform: scale(1);\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main {\n  transform: scale(1);\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev {\n  transform: scale(0.66);\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev {\n  transform: scale(0.33);\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next {\n  transform: scale(0.66);\n}\n.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next {\n  transform: scale(0.33);\n}\n.swiper-pagination-bullet {\n  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 8px));\n  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 8px));\n  display: inline-block;\n  border-radius: var(--swiper-pagination-bullet-border-radius, 50%);\n  background: var(--swiper-pagination-bullet-inactive-color, #000);\n  opacity: var(--swiper-pagination-bullet-inactive-opacity, 0.2);\n}\nbutton.swiper-pagination-bullet {\n  border: none;\n  margin: 0;\n  padding: 0;\n  box-shadow: none;\n  -webkit-appearance: none;\n          appearance: none;\n}\n.swiper-pagination-clickable .swiper-pagination-bullet {\n  cursor: pointer;\n}\n.swiper-pagination-bullet:only-child {\n  display: none !important;\n}\n.swiper-pagination-bullet-active {\n  opacity: var(--swiper-pagination-bullet-opacity, 1);\n  background: var(--swiper-pagination-color, var(--swiper-theme-color));\n}\n.swiper-vertical > .swiper-pagination-bullets,\n.swiper-pagination-vertical.swiper-pagination-bullets {\n  right: var(--swiper-pagination-right, 8px);\n  left: var(--swiper-pagination-left, auto);\n  top: 50%;\n  transform: translate3d(0px, -50%, 0);\n}\n.swiper-vertical > .swiper-pagination-bullets .swiper-pagination-bullet,\n.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet {\n  margin: var(--swiper-pagination-bullet-vertical-gap, 6px) 0;\n  display: block;\n}\n.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,\n.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {\n  top: 50%;\n  transform: translateY(-50%);\n  width: 8px;\n}\n.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,\n.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {\n  display: inline-block;\n  transition: 200ms transform,\n        200ms top;\n}\n.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet,\n.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet {\n  margin: 0 var(--swiper-pagination-bullet-horizontal-gap, 4px);\n}\n.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,\n.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n}\n.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,\n.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {\n  transition: 200ms transform,\n        200ms left;\n}\n.swiper-horizontal.swiper-rtl > .swiper-pagination-bullets-dynamic .swiper-pagination-bullet {\n  transition: 200ms transform,\n    200ms right;\n}\n/* Fraction */\n.swiper-pagination-fraction {\n  color: var(--swiper-pagination-fraction-color, inherit);\n}\n/* Progress */\n.swiper-pagination-progressbar {\n  background: var(--swiper-pagination-progressbar-bg-color, rgba(0, 0, 0, 0.25));\n  position: absolute;\n}\n.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {\n  background: var(--swiper-pagination-color, var(--swiper-theme-color));\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  transform: scale(0);\n  transform-origin: left top;\n}\n.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill {\n  transform-origin: right top;\n}\n.swiper-horizontal > .swiper-pagination-progressbar,\n.swiper-pagination-progressbar.swiper-pagination-horizontal,\n.swiper-vertical > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,\n.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite {\n  width: 100%;\n  height: var(--swiper-pagination-progressbar-size, 4px);\n  left: 0;\n  top: 0;\n}\n.swiper-vertical > .swiper-pagination-progressbar,\n.swiper-pagination-progressbar.swiper-pagination-vertical,\n.swiper-horizontal > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,\n.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite {\n  width: var(--swiper-pagination-progressbar-size, 4px);\n  height: 100%;\n  left: 0;\n  top: 0;\n}\n.swiper-pagination-lock {\n  display: none;\n}\n:root {\n  /*\n  --swiper-scrollbar-border-radius: 10px;\n  --swiper-scrollbar-top: auto;\n  --swiper-scrollbar-bottom: 4px;\n  --swiper-scrollbar-left: auto;\n  --swiper-scrollbar-right: 4px;\n  --swiper-scrollbar-sides-offset: 1%;\n  --swiper-scrollbar-bg-color: rgba(0, 0, 0, 0.1);\n  --swiper-scrollbar-drag-bg-color: rgba(0, 0, 0, 0.5);\n  --swiper-scrollbar-size: 4px;\n  */\n}\n.swiper-scrollbar {\n  border-radius: var(--swiper-scrollbar-border-radius, 10px);\n  position: relative;\n  touch-action: none;\n  background: var(--swiper-scrollbar-bg-color, rgba(0, 0, 0, 0.1));\n}\n.swiper-scrollbar-disabled > .swiper-scrollbar,\n.swiper-scrollbar.swiper-scrollbar-disabled {\n  display: none !important;\n}\n.swiper-horizontal > .swiper-scrollbar,\n.swiper-scrollbar.swiper-scrollbar-horizontal {\n  position: absolute;\n  left: var(--swiper-scrollbar-sides-offset, 1%);\n  bottom: var(--swiper-scrollbar-bottom, 4px);\n  top: var(--swiper-scrollbar-top, auto);\n  z-index: 50;\n  height: var(--swiper-scrollbar-size, 4px);\n  width: calc(100% - 2 * var(--swiper-scrollbar-sides-offset, 1%));\n}\n.swiper-vertical > .swiper-scrollbar,\n.swiper-scrollbar.swiper-scrollbar-vertical {\n  position: absolute;\n  left: var(--swiper-scrollbar-left, auto);\n  right: var(--swiper-scrollbar-right, 4px);\n  top: var(--swiper-scrollbar-sides-offset, 1%);\n  z-index: 50;\n  width: var(--swiper-scrollbar-size, 4px);\n  height: calc(100% - 2 * var(--swiper-scrollbar-sides-offset, 1%));\n}\n.swiper-scrollbar-drag {\n  height: 100%;\n  width: 100%;\n  position: relative;\n  background: var(--swiper-scrollbar-drag-bg-color, rgba(0, 0, 0, 0.5));\n  border-radius: var(--swiper-scrollbar-border-radius, 10px);\n  left: 0;\n  top: 0;\n}\n.swiper-scrollbar-cursor-drag {\n  cursor: move;\n}\n.swiper-scrollbar-lock {\n  display: none;\n}\n/* Zoom container styles start */\n.swiper-zoom-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n.swiper-zoom-container > img,\n.swiper-zoom-container > svg,\n.swiper-zoom-container > canvas {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n}\n/* Zoom container styles end */\n.swiper-slide-zoomed {\n  cursor: move;\n  touch-action: none;\n}\n/* a11y */\n.swiper .swiper-notification {\n  position: absolute;\n  left: 0;\n  top: 0;\n  pointer-events: none;\n  opacity: 0;\n  z-index: -1000;\n}\n.swiper-free-mode > .swiper-wrapper {\n  transition-timing-function: ease-out;\n  margin: 0 auto;\n}\n.swiper-grid > .swiper-wrapper {\n  flex-wrap: wrap;\n}\n.swiper-grid-column > .swiper-wrapper {\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n.swiper-fade.swiper-free-mode .swiper-slide {\n  transition-timing-function: ease-out;\n}\n.swiper-fade .swiper-slide {\n  pointer-events: none;\n  transition-property: opacity;\n}\n.swiper-fade .swiper-slide .swiper-slide {\n  pointer-events: none;\n}\n.swiper-fade .swiper-slide-active {\n  pointer-events: auto;\n}\n.swiper-fade .swiper-slide-active .swiper-slide-active {\n  pointer-events: auto;\n}\n.swiper-cube {\n  overflow: visible;\n}\n.swiper-cube .swiper-slide {\n  pointer-events: none;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  z-index: 1;\n  visibility: hidden;\n  transform-origin: 0 0;\n  width: 100%;\n  height: 100%;\n}\n.swiper-cube .swiper-slide .swiper-slide {\n  pointer-events: none;\n}\n.swiper-cube.swiper-rtl .swiper-slide {\n  transform-origin: 100% 0;\n}\n.swiper-cube .swiper-slide-active,\n.swiper-cube .swiper-slide-active .swiper-slide-active {\n  pointer-events: auto;\n}\n.swiper-cube .swiper-slide-active,\n.swiper-cube .swiper-slide-next,\n.swiper-cube .swiper-slide-prev {\n  pointer-events: auto;\n  visibility: visible;\n}\n.swiper-cube .swiper-cube-shadow {\n  position: absolute;\n  left: 0;\n  bottom: 0px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.6;\n  z-index: 0;\n}\n.swiper-cube .swiper-cube-shadow:before {\n  content: '';\n  background: #000;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  filter: blur(50px);\n}\n.swiper-cube .swiper-slide-next + .swiper-slide {\n  pointer-events: auto;\n  visibility: visible;\n}\n/* Cube slide shadows start */\n.swiper-cube .swiper-slide-shadow-cube.swiper-slide-shadow-top,\n.swiper-cube .swiper-slide-shadow-cube.swiper-slide-shadow-bottom,\n.swiper-cube .swiper-slide-shadow-cube.swiper-slide-shadow-left,\n.swiper-cube .swiper-slide-shadow-cube.swiper-slide-shadow-right {\n  z-index: 0;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* Cube slide shadows end */\n.swiper-flip {\n  overflow: visible;\n}\n.swiper-flip .swiper-slide {\n  pointer-events: none;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  z-index: 1;\n}\n.swiper-flip .swiper-slide .swiper-slide {\n  pointer-events: none;\n}\n.swiper-flip .swiper-slide-active,\n.swiper-flip .swiper-slide-active .swiper-slide-active {\n  pointer-events: auto;\n}\n/* Flip slide shadows start */\n.swiper-flip .swiper-slide-shadow-flip.swiper-slide-shadow-top,\n.swiper-flip .swiper-slide-shadow-flip.swiper-slide-shadow-bottom,\n.swiper-flip .swiper-slide-shadow-flip.swiper-slide-shadow-left,\n.swiper-flip .swiper-slide-shadow-flip.swiper-slide-shadow-right {\n  z-index: 0;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* Flip slide shadows end */\n.swiper-creative .swiper-slide {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  overflow: hidden;\n  transition-property: transform, opacity, height;\n}\n.swiper-cards {\n  overflow: visible;\n}\n.swiper-cards .swiper-slide {\n  transform-origin: center bottom;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  overflow: hidden;\n}\n","@import \"../flex_mixins\";\n@import \"../grid_mixins\";\n@import \"swiper/css/bundle\";\n\n//\n// Custom CSS\n//\n\n:root {\n    --swiper-navigation-size: 36px;\n    --swiper-navigation-sides-offset: 10px;\n    --swiper-navigation-color: #{$Primary-01};\n    --swiper-pagination-color: #{$Primary-01};\n    --swiper-pagination-bottom: 20px;\n    --swiper-pagination-top: auto;\n}\n\n.swiper-container {\n    position: relative;\n    z-index: 1;\n}\n\n.swiper-marquee {\n    &.swiper-wrapper {\n        transition-timing-function: linear !important;\n        touch-action: manipulation;\n    }\n}\n\n.swiper-controls {\n    .swiper-button {\n        width: var(--swiper-navigation-size);\n\n        &::after {\n            display: none;\n        }\n        &::before {\n            background-color: #F0F4F7;\n            border: 1px solid #F0F4F7;\n            font-size: 18px;\n            color: $black;\n            line-height: 34px;\n            @include flex-center();\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            aspect-ratio: 1 / 1;\n            opacity: 1;\n            transition: 0.3s;\n            font-weight: 400;\n        }\n\n        &:hover {\n            &::before {\n                opacity: 1;\n                color: $white;\n                background-color: $Primary-01;\n                border-color: $Primary-01;\n            }\n        }\n    }\n}\n\n.swiper-container {\n    &:hover {\n        .swiper-controls {\n            .swiper-button {\n                &::before {\n                    opacity: 1;\n                }\n            }\n        }\n    }\n}\n","\n//\n// Color\n//\n\n$white: #fff !default;\n$black: #000 !default;\n\n$gray-100: #f8f9fa !default;\n$gray-200: #e9ecef !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #6c757d !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n\n$grays: (\n        \"100\": $gray-100,\n        \"200\": $gray-200,\n        \"300\": $gray-300,\n        \"400\": $gray-400,\n        \"500\": $gray-500,\n        \"600\": $gray-600,\n        \"700\": $gray-700,\n        \"800\": $gray-800,\n        \"900\": $gray-900\n) !default;\n\n//\n\n$blue:    #0d6efd !default;\n$indigo:  #6610f2 !default;\n$purple:  #6f42c1 !default;\n$pink:    #d63384 !default;\n$red:     #dc3545 !default;\n$orange:  #fd7e14 !default;\n$yellow:  #ffc107 !default;\n$green:   #198754 !default;\n$teal:    #20c997 !default;\n$cyan:    #0dcaf0 !default;\n\n$colors: (\n        \"blue\":       $blue,\n        \"indigo\":     $indigo,\n        \"purple\":     $purple,\n        \"pink\":       $pink,\n        \"red\":        $red,\n        \"orange\":     $orange,\n        \"yellow\":     $yellow,\n        \"green\":      $green,\n        \"teal\":       $teal,\n        \"cyan\":       $cyan,\n        \"black\":      $black,\n        \"white\":      $white,\n        \"gray\":       $gray-600,\n        \"gray-dark\":  $gray-800\n) !default;\n\n//\n\n$blue-100: tint-color($blue, 80%) !default;\n$blue-200: tint-color($blue, 60%) !default;\n$blue-300: tint-color($blue, 40%) !default;\n$blue-400: tint-color($blue, 20%) !default;\n$blue-500: $blue !default;\n$blue-600: shade-color($blue, 20%) !default;\n$blue-700: shade-color($blue, 40%) !default;\n$blue-800: shade-color($blue, 60%) !default;\n$blue-900: shade-color($blue, 80%) !default;\n\n$blues: (\n        \"blue-100\": $blue-100,\n        \"blue-200\": $blue-200,\n        \"blue-300\": $blue-300,\n        \"blue-400\": $blue-400,\n        \"blue-500\": $blue-500,\n        \"blue-600\": $blue-600,\n        \"blue-700\": $blue-700,\n        \"blue-800\": $blue-800,\n        \"blue-900\": $blue-900\n) !default;\n\n//\n\n$indigo-100: tint-color($indigo, 80%) !default;\n$indigo-200: tint-color($indigo, 60%) !default;\n$indigo-300: tint-color($indigo, 40%) !default;\n$indigo-400: tint-color($indigo, 20%) !default;\n$indigo-500: $indigo !default;\n$indigo-600: shade-color($indigo, 20%) !default;\n$indigo-700: shade-color($indigo, 40%) !default;\n$indigo-800: shade-color($indigo, 60%) !default;\n$indigo-900: shade-color($indigo, 80%) !default;\n\n$indigos: (\n        \"indigo-100\": $indigo-100,\n        \"indigo-200\": $indigo-200,\n        \"indigo-300\": $indigo-300,\n        \"indigo-400\": $indigo-400,\n        \"indigo-500\": $indigo-500,\n        \"indigo-600\": $indigo-600,\n        \"indigo-700\": $indigo-700,\n        \"indigo-800\": $indigo-800,\n        \"indigo-900\": $indigo-900\n) !default;\n\n//\n\n$purple-100: tint-color($purple, 80%) !default;\n$purple-200: tint-color($purple, 60%) !default;\n$purple-300: tint-color($purple, 40%) !default;\n$purple-400: tint-color($purple, 20%) !default;\n$purple-500: $purple !default;\n$purple-600: shade-color($purple, 20%) !default;\n$purple-700: shade-color($purple, 40%) !default;\n$purple-800: shade-color($purple, 60%) !default;\n$purple-900: shade-color($purple, 80%) !default;\n\n$purples: (\n        \"purple-100\": $purple-100,\n        \"purple-200\": $purple-200,\n        \"purple-300\": $purple-300,\n        \"purple-400\": $purple-400,\n        \"purple-500\": $purple-500,\n        \"purple-600\": $purple-600,\n        \"purple-700\": $purple-700,\n        \"purple-800\": $purple-800,\n        \"purple-900\": $purple-900\n) !default;\n\n//\n\n$pink-100: tint-color($pink, 80%) !default;\n$pink-200: tint-color($pink, 60%) !default;\n$pink-300: tint-color($pink, 40%) !default;\n$pink-400: tint-color($pink, 20%) !default;\n$pink-500: $pink !default;\n$pink-600: shade-color($pink, 20%) !default;\n$pink-700: shade-color($pink, 40%) !default;\n$pink-800: shade-color($pink, 60%) !default;\n$pink-900: shade-color($pink, 80%) !default;\n\n$pinks: (\n        \"pink-100\": $pink-100,\n        \"pink-200\": $pink-200,\n        \"pink-300\": $pink-300,\n        \"pink-400\": $pink-400,\n        \"pink-500\": $pink-500,\n        \"pink-600\": $pink-600,\n        \"pink-700\": $pink-700,\n        \"pink-800\": $pink-800,\n        \"pink-900\": $pink-900\n) !default;\n\n//\n\n$red-100: tint-color($red, 80%) !default;\n$red-200: tint-color($red, 60%) !default;\n$red-300: tint-color($red, 40%) !default;\n$red-400: tint-color($red, 20%) !default;\n$red-500: $red !default;\n$red-600: shade-color($red, 20%) !default;\n$red-700: shade-color($red, 40%) !default;\n$red-800: shade-color($red, 60%) !default;\n$red-900: shade-color($red, 80%) !default;\n\n$reds: (\n        \"red-100\": $red-100,\n        \"red-200\": $red-200,\n        \"red-300\": $red-300,\n        \"red-400\": $red-400,\n        \"red-500\": $red-500,\n        \"red-600\": $red-600,\n        \"red-700\": $red-700,\n        \"red-800\": $red-800,\n        \"red-900\": $red-900\n) !default;\n\n$orange-100: tint-color($orange, 80%) !default;\n$orange-200: tint-color($orange, 60%) !default;\n$orange-300: tint-color($orange, 40%) !default;\n$orange-400: tint-color($orange, 20%) !default;\n$orange-500: $orange !default;\n$orange-600: shade-color($orange, 20%) !default;\n$orange-700: shade-color($orange, 40%) !default;\n$orange-800: shade-color($orange, 60%) !default;\n$orange-900: shade-color($orange, 80%) !default;\n\n$oranges: (\n        \"orange-100\": $orange-100,\n        \"orange-200\": $orange-200,\n        \"orange-300\": $orange-300,\n        \"orange-400\": $orange-400,\n        \"orange-500\": $orange-500,\n        \"orange-600\": $orange-600,\n        \"orange-700\": $orange-700,\n        \"orange-800\": $orange-800,\n        \"orange-900\": $orange-900\n) !default;\n\n//\n\n$yellow-100: tint-color($yellow, 80%) !default;\n$yellow-200: tint-color($yellow, 60%) !default;\n$yellow-300: tint-color($yellow, 40%) !default;\n$yellow-400: tint-color($yellow, 20%) !default;\n$yellow-500: $yellow !default;\n$yellow-600: shade-color($yellow, 20%) !default;\n$yellow-700: shade-color($yellow, 40%) !default;\n$yellow-800: shade-color($yellow, 60%) !default;\n$yellow-900: shade-color($yellow, 80%) !default;\n\n$yellows: (\n        \"yellow-100\": $yellow-100,\n        \"yellow-200\": $yellow-200,\n        \"yellow-300\": $yellow-300,\n        \"yellow-400\": $yellow-400,\n        \"yellow-500\": $yellow-500,\n        \"yellow-600\": $yellow-600,\n        \"yellow-700\": $yellow-700,\n        \"yellow-800\": $yellow-800,\n        \"yellow-900\": $yellow-900\n) !default;\n\n$green-100: tint-color($green, 80%) !default;\n$green-200: tint-color($green, 60%) !default;\n$green-300: tint-color($green, 40%) !default;\n$green-400: tint-color($green, 20%) !default;\n$green-500: $green !default;\n$green-600: shade-color($green, 20%) !default;\n$green-700: shade-color($green, 40%) !default;\n$green-800: shade-color($green, 60%) !default;\n$green-900: shade-color($green, 80%) !default;\n\n$greens: (\n        \"green-100\": $green-100,\n        \"green-200\": $green-200,\n        \"green-300\": $green-300,\n        \"green-400\": $green-400,\n        \"green-500\": $green-500,\n        \"green-600\": $green-600,\n        \"green-700\": $green-700,\n        \"green-800\": $green-800,\n        \"green-900\": $green-900\n) !default;\n\n//\n\n$teal-100: tint-color($teal, 80%) !default;\n$teal-200: tint-color($teal, 60%) !default;\n$teal-300: tint-color($teal, 40%) !default;\n$teal-400: tint-color($teal, 20%) !default;\n$teal-500: $teal !default;\n$teal-600: shade-color($teal, 20%) !default;\n$teal-700: shade-color($teal, 40%) !default;\n$teal-800: shade-color($teal, 60%) !default;\n$teal-900: shade-color($teal, 80%) !default;\n\n$teals: (\n        \"teal-100\": $teal-100,\n        \"teal-200\": $teal-200,\n        \"teal-300\": $teal-300,\n        \"teal-400\": $teal-400,\n        \"teal-500\": $teal-500,\n        \"teal-600\": $teal-600,\n        \"teal-700\": $teal-700,\n        \"teal-800\": $teal-800,\n        \"teal-900\": $teal-900\n) !default;\n\n//\n\n$cyan-100: tint-color($cyan, 80%) !default;\n$cyan-200: tint-color($cyan, 60%) !default;\n$cyan-300: tint-color($cyan, 40%) !default;\n$cyan-400: tint-color($cyan, 20%) !default;\n$cyan-500: $cyan !default;\n$cyan-600: shade-color($cyan, 20%) !default;\n$cyan-700: shade-color($cyan, 40%) !default;\n$cyan-800: shade-color($cyan, 60%) !default;\n$cyan-900: shade-color($cyan, 80%) !default;\n\n$cyans: (\n        \"cyan-100\": $cyan-100,\n        \"cyan-200\": $cyan-200,\n        \"cyan-300\": $cyan-300,\n        \"cyan-400\": $cyan-400,\n        \"cyan-500\": $cyan-500,\n        \"cyan-600\": $cyan-600,\n        \"cyan-700\": $cyan-700,\n        \"cyan-800\": $cyan-800,\n        \"cyan-900\": $cyan-900\n) !default;\n","@use \"sass:list\";\n@use \"sass:math\";\n\n@import \"mixins\";\n\n@mixin flex-self( $total: 1, $n: 1, $gap: false ) {\n    @if type-of($gap) == bool or $gap < 0 {\n        $gap: 0;\n    }\n    @if is-int($total) and is-int($n) and $n > 0 {\n        @if $total == $n {\n            width: percentage(1);\n        } @else if $total > $n {\n            width: subtract(percentage(divide($n, $total)), fs(($total - $n) * divide($gap, $total)));\n        }\n    }\n}\n\n@mixin flex-basis( $n: 1, $gap: false ) {\n    @include flex-self($grid-columns, $n, $gap);\n}\n\n@mixin media-flex-basis(\n    $m: 1,\n    $t: false,\n    $d: false,\n    $gap_m: false,\n    $gap: false\n) {\n    flex: 0 0 auto;\n\n    @if is-int($m) and $m > 0 {\n        @include flex-basis($m, $gap_m);\n    }\n    @if is-int($t) and $t > 0 {\n        @include mq-min(tablet) {\n            @include flex-basis($t, $gap);\n        }\n    }\n    @if is-int($d) and $d > 0 {\n        @include mq-min(desktop) {\n            @include flex-basis($d, $gap);\n        }\n    }\n}\n\n@mixin media-flex-self(\n    $m: 1,\n    $t: false,\n    $d: false,\n    $gap_m: false,\n    $gap: false\n) {\n    @if is-int($m) and $m > 0 {\n        @include flex-self($m, 1, $gap_m);\n    }\n    @if is-int($t) and $t > 0 {\n        @include mq-min(tablet) {\n            @include flex-self($t, 1, $gap);\n        }\n    }\n    @if is-int($d) and $d > 0 {\n        @include mq-min(desktop) {\n            @include flex-self($d, 1, $gap);\n        }\n    }\n}\n\n@mixin flex-layout-auto(\n    $gap_m: false,\n    $gap: false,\n    $min_width: 0,\n    $max_width: 100%,\n    $class_cell: '.cell'\n) {\n    @include flex-x(true);\n    @include media-gap($gap_m, $gap, false);\n\n    & > #{unquote($class_cell)} {\n        @include flex-auto;\n        min-width: $min_width;\n        max-width: $max_width;\n    }\n}\n\n@mixin flex-layout(\n    $m: 1,\n    $t: false,\n    $d: false,\n    $gap_m: false,\n    $gap: false,\n    $class_cell: '.cell'\n) {\n    @include flex-x(true);\n    @include media-gap($gap_m, $gap, false);\n\n    & > #{unquote($class_cell)} {\n        @if '.cell' != $class_cell {\n            @include cell(false);\n        }\n\n        @include media-flex-self($m, $t, $d, $gap_m, $gap);\n    }\n}\n\n@mixin flex-shrink {\n    flex: 0 0 auto;\n    max-width: 100%;\n    min-height: 0;\n    min-width: 0;\n}\n\n@mixin flex-auto {\n    flex: 1 1 0;\n    width: auto;\n}\n\n@mixin flex-stretch {\n    flex: 0 0 auto;\n    width: 100%;\n}\n\n@mixin cell( $w: false ) {\n    flex: 0 0 auto;\n    max-width: 100%;\n    min-height: 0;\n    min-width: 0;\n\n    @if type-of($w) != bool {\n        width: fs($w);\n    }\n}\n\n@mixin flex-x($flex: true, $reverse: false) {\n    @if true == $flex {\n        display: flex;\n    }\n\n    @if false == $reverse {\n        flex-flow: row wrap;\n    } @else {\n        flex-flow: row-reverse wrap;\n    }\n}\n\n@mixin flex-y($flex: true, $reverse: false) {\n    @if true == $flex {\n        display: flex;\n    }\n\n    @if false == $reverse {\n        flex-flow: column nowrap;\n    } @else {\n        flex-flow: column-reverse nowrap;\n    }\n}\n\n@mixin flex-padding-x(\n    $padding_m: $gutter-xs,\n    $padding: $gutter,\n    $class_cell: '.cell'\n) {\n    @include mx-gutter($padding_m, $padding);\n\n    & > #{unquote($class_cell)} {\n        @if '.cell' != $class_cell {\n            @include cell();\n        }\n\n        @include px-gutter($padding_m, $padding);\n    }\n}\n\n@mixin flex-padding-y(\n    $padding_m: $gutter-xs,\n    $padding: $gutter,\n    $class_cell: '.cell'\n) {\n    @include my-gutter($padding_m, $padding);\n\n    & > #{unquote($class_cell)} {\n        @if '.cell' != $class_cell {\n            @include cell();\n        }\n\n        @include py-gutter($padding_m, $padding);\n    }\n}\n\n@mixin flex-align-center( $direction_column: false ) {\n    display: flex;\n    align-items: center;\n\n    @if true ==  $direction_column {\n        flex-direction: $direction_column;\n    }\n}\n\n@mixin flex-center() {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@mixin inline-flex-center() {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n","@import \"functions\";\n@import \"colors\";\n\n//\n// theme color\n//\n$Primary-01: #ddc89b;\n$Primary-02: #007a65;\n$Primary-03: #bb2847;\n$Primary-04: #fef6f6;\n\n$Secondary-01: #331f00;\n$Secondary-02: #ec9a20;\n$Secondary-03: #fbead0;\n$Secondary-04: #fefbf6;\n\n$Gray-01: #0a0a0a;\n$Gray-02: #666666;\n$Gray-03: #f0f0f0;\n$Gray-04: #fafafa;\n\n$primary: $Primary-01 !default;\n$secondary: $Secondary-01 !default;\n$success: $green !default;\n$info: $cyan !default;\n$warning: $yellow !default;\n$alert: $red !default;\n$light: $gray-100 !default;\n$dark: $gray-900 !default;\n$dark-red: #c21111;\n$light-blue: #EEFFFD;\n$light-green: #00FF85;\n\n$theme-colors: (\n        \"primary\": $primary,\n        \"secondary\": $secondary,\n        \"success\": $success,\n        \"info\": $info,\n        \"warning\": $warning,\n        \"alert\": $alert,\n        \"light\": $light,\n        \"dark\": $dark\n) !default;\n\n// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\n\n$min-contrast-ratio: 4.5 !default;\n\n$color-contrast-dark: $black !default;\n$color-contrast-light: $white !default;\n\n// Body\n//\n// Settings for the `<body>` element.\n\n$header-color: #0a0a0a !default;\n$body-color: #0a0a0a !default;\n$body-bg: #F5F5F5 !default;\n$body-size: 16px !default;\n\n// Links\n//\n// Style anchor elements.\n\n$link-color: #0a0a0a !default;\n$link-decoration: underline !default;\n$link-hover-color: shift-color($link-color, 20%) !default;\n$link-hover-decoration: null !default;\n\n// Paragraphs\n//\n// Style p element.\n\n$paragraph-margin-bottom: 15px !default;\n\n// Layout breakpoints\n//\n// Define the minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries.\n\n$xs: 0 !default;\n$sm: 576px !default;\n$md: 768px !default;\n$lg: 1024px !default;\n$xl: 1280px !default;\n$\\2xl: 1400px !default;\n$\\3xl: 1880px !default;\n$wp: 782px !default;\n\n$mq-breakpoints: (\n        xs: 0,\n        sm: fs($sm),\n        md: fs($md),\n        lg: fs($lg),\n        xl: fs($xl),\n        2xl: fs($\\2xl),\n        3xl: fs($\\3xl),\n        mobile: 0,\n        tablet: fs($md),\n        desktop: fs($lg),\n        wp: fs($wp)\n) !default;\n\n// Layout containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$screen-sm: 546px !default;\n$screen-md: 738px !default;\n$screen-lg: 994px !default;\n$screen-xl: 1140px !default;\n$screen-2xl: 1366px !default;\n$screen-3xl: 1680px !default;\n\n$container-max-widths: (\n        sm: fs($screen-sm),\n        md: fs($screen-md),\n        lg: fs($screen-lg),\n        xl: fs($screen-xl),\n        2xl: fs($screen-2xl),\n        3xl: fs($screen-3xl)\n) !default;\n\n// Typography\n//\n// Font, line-height, gutter, and more.\n\n$font-sizes: (\n        h1: 36px,\n        h2: 30px,\n        h3: 25px,\n        h4: 21px,\n        h5: 18px,\n        h6: 16px\n) !default;\n\n$font-sizes-large: (\n        h1: 44px,\n        h2: 36px,\n        h3: 29px,\n        h4: 24px,\n        h5: 20px,\n        h6: 17px\n) !default;\n\n$line-height-global: 1.6 !default;\n$line-height-header: 1.4 !default;\n$line-height-paragraph: 1.7 !default;\n\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n$font-weight-medium: 500 !default;\n$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n\n// Spacers\n\n$gutter-xs: 10px !default;\n$gutter: 15px !default;\n\n$gap-xs: $gutter-xs * 2;\n$gap: $gutter * 2;\n\n$grid-columns: 12 !default;\n$grid-columns-max: 9 !default;\n\n$spacers: (\n        gutter-xs: fs($gutter-xs),\n        gutter: fs($gutter),\n        gap-xs: fs($gap-xs),\n        gap: fs($gap)\n) !default;\n\n//\n\n$scrollbar-w: 8px !default;\n$scrollbar-h: 4px !default;\n\n// $header-font: 'Playfair Display', -apple-system, BlinkMacSystemFont, \"Segoe UI\", system-ui, \"Ubuntu\", Arial, cursive, sans-serif !default;\n$header-font: 'Source Sans 3', -apple-system, BlinkMacSystemFont, \"Segoe UI\", system-ui, \"Ubuntu\", Arial, cursive, sans-serif !default;\n$body-font: 'Source Sans 3', -apple-system, BlinkMacSystemFont, \"Segoe UI\", system-ui, \"Ubuntu\", Arial, cursive, sans-serif !default;\n$awesome-font: \"Font Awesome 6 Pro\", \"Font Awesome 6 Brands\", \"Font Awesome 6 Free\", sans-serif;\n"],"names":[],"sourceRoot":""}